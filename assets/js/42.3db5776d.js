(window.webpackJsonp=window.webpackJsonp||[]).push([[42],{611:function(n,t,v){"use strict";v.r(t);var a=v(12),e=Object(a.a)({},(function(){var n=this,t=n.$createElement,v=n._self._c||t;return v("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[v("h1",{attrs:{id:"java运行时数据区和常用指令"}},[n._v("Java运行时数据区和常用指令")]),n._v(" "),v("p",[n._v("JVM Runtime Data Area and JVM Instructions")]),n._v(" "),v("p",[v("clinit",[n._v(" 静态语句块")])],1),n._v(" "),v("p",[v("init",[n._v(" 构造方法")])],1),n._v(" "),v("p",[n._v("_sotre")]),n._v(" "),v("p",[n._v("_load")]),n._v(" "),v("p",[n._v("invoke_XXX")]),n._v(" "),v("ol",[v("li",[n._v("InvokeStatic\n调用静态方法")]),n._v(" "),v("li",[n._v("InvokeVirtual\n自带多态\n调用实例方法")]),n._v(" "),v("li",[n._v("InvokeInterface")]),n._v(" "),v("li",[n._v("InovkeSpecial\n可以直接定位，不需要多态的方法\nprivate 方法 ， 构造方法")]),n._v(" "),v("li",[n._v("InvokeDynamic\nJVM最难的指令\nlambda表达式或者反射或者其他动态语言scala kotlin，或者CGLib ASM，动态产生的class，会用到的指令")])])])}),[],!1,null,null,null);t.default=e.exports}}]);