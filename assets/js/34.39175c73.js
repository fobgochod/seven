(window.webpackJsonp=window.webpackJsonp||[]).push([[34],{597:function(t,a,s){"use strict";s.r(a);var n=s(12),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"解析自旋锁cas操作与volatile"}},[t._v("解析自旋锁CAS操作与volatile")]),t._v(" "),s("h2",{attrs:{id:"volatile关键字"}},[t._v("volatile关键字")]),t._v(" "),s("blockquote",[s("p",[t._v("可以阅读这篇文章进行更深入的理解"),s("a",{attrs:{href:"http://www.cnblogs.com/nexiyi/p/java_memory_model_and_thread.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Java内存模型"),s("OutboundLink")],1)])]),t._v(" "),s("ul",[s("li",[t._v("保证线程可见性")]),t._v(" "),s("li",[t._v("禁止指令重排")])]),t._v(" "),s("hr"),t._v(" "),s("h3",{attrs:{id:"保证线程可见性"}},[t._v("保证线程可见性")]),t._v(" "),s("ul",[s("li",[t._v("volatile 关键字，使一个变量在多个线程间可见")]),t._v(" "),s("li",[t._v("A B线程都用到一个变量，java默认是A线程中保留一份copy，这样如果B线程修改了该变量，则A线程未必知道")]),t._v(" "),s("li",[t._v("使用volatile关键字，会让所有线程都会读到变量的修改值")])]),t._v(" "),s("blockquote",[s("p",[t._v("volatile并不能保证多个线程共同修改running变量时所带来的不一致问题，也就是说volatile不能替代synchronized"),s("br"),t._v("\nvolatile修饰引用类型（包括数组）只能保证引用本身的可见性，不能保证内部字段的可见性")])]),t._v(" "),s("hr"),t._v(" "),s("ul",[s("li",[t._v("保证线程可见性\n"),s("ul",[s("li",[t._v("MESI")]),t._v(" "),s("li",[t._v("CPU缓存一致性协议")])])])]),t._v(" "),s("h3",{attrs:{id:"禁止指令重排"}},[t._v("禁止指令重排")]),t._v(" "),s("blockquote",[s("p",[t._v("和现代CPU有关")])]),t._v(" "),s("ul",[s("li",[s("p",[t._v("以前CPU是顺序执行")])]),t._v(" "),s("li",[s("p",[t._v("现在为了提高效率，会把指令并发执行（流水线执行）")]),t._v(" "),s("ul",[s("li",[t._v("这样就可能会出现，后面的指令先执行完毕")]),t._v(" "),s("li",[t._v("有必要，经过实际工程验证，速度提高很多")])])]),t._v(" "),s("li",[s("p",[t._v("DCL 单例")])]),t._v(" "),s("li",[s("p",[t._v("Double Check Lock")])]),t._v(" "),s("li",[s("p",[t._v("loadfence原语指令")])]),t._v(" "),s("li",[s("p",[t._v("storefence原语指令")])])]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DCLSingle")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("volatile")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DCLSingle")]),t._v(" instance"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DCLSingle")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DCLSingle")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getInstance")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("instance "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("synchronized")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DCLSingle")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("instance "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                    instance "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DCLSingle")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" instance"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("blockquote",[s("p",[t._v("Object o = new Object(); 编译后的字节码指令")])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" new "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#2 <java/lang/Object>")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" dup\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v(" invokespecial "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#1 <java/lang/Object.<init>>")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),t._v(" astore_1\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("return")]),t._v("\n")])])]),s("ul",[s("li",[t._v("new对象这个过程，编译后字节码指令有三步 (instance = new DCLSingle())\n"),s("ol",[s("li",[t._v("给对象申请内存，此时a=0")]),t._v(" "),s("li",[t._v("给成员变量初始化，此时a=1")]),t._v(" "),s("li",[t._v("内存地址赋值给instance")])])])]),t._v(" "),s("blockquote",[s("p",[t._v("如果有指令重排序（2、3对调），DCL第一次null判断会获取到没有初始化的对象(即a=0);"),s("br"),t._v("\n所以有必要加volatile，禁止指令重排序")])]),t._v(" "),s("blockquote",[s("p",[t._v("jvm中规定了8种happen-before原则，其它指令都可以重排序"),s("br"),t._v("\n读屏障和写屏障是防止指令重排序用的")])]),t._v(" "),s("h3",{attrs:{id:"synchronized优化"}},[t._v("synchronized优化")]),t._v(" "),s("ul",[s("li",[t._v("同步代码块中的语句越少越好")]),t._v(" "),s("li",[t._v("用对象加锁，加final防止对象被修改 final Object o = new Object();")]),t._v(" "),s("li",[t._v("不能用String常量、Integer、Long(池化)")])]),t._v(" "),s("h2",{attrs:{id:"cas-无锁优化-自旋-乐观锁"}},[t._v("CAS(无锁优化 自旋 乐观锁)")]),t._v(" "),s("blockquote",[s("p",[t._v("AtomicXXX开头的类都是以CAS操作保证线程安全的")])]),t._v(" "),s("ul",[s("li",[t._v("Compare And Set/Swap")]),t._v(" "),s("li",[t._v("CAS(V, Expected, NewValue)")])]),t._v(" "),s("blockquote",[s("p",[t._v("if(V==E) V = NEW otherwise try again or fail")])]),t._v(" "),s("ul",[s("li",[t._v("CPU原语支持")])]),t._v(" "),s("h3",{attrs:{id:"aba问题"}},[t._v("ABA问题")]),t._v(" "),s("blockquote",[s("p",[t._v("在进行CAS操作时候，被另一个线程修改，并且又改回去了"),s("br"),t._v("\n0->1->0 对于当前CAS操作线程不变")])]),t._v(" "),s("ul",[s("li",[t._v("如果基础类型 无所谓")]),t._v(" "),s("li",[t._v("如果引用类型\n"),s("ul",[s("li",[t._v("加version")]),t._v(" "),s("li",[t._v("A 1.0")]),t._v(" "),s("li",[t._v("B 2.0")]),t._v(" "),s("li",[t._v("A 3.0")])])])]),t._v(" "),s("h2",{attrs:{id:"unsafe-jdk1-8-c-c-的指针"}},[t._v("Unsafe(jdk1.8) = c c++的指针")]),t._v(" "),s("ul",[s("li",[t._v("直接操作内存\n"),s("ul",[s("li",[t._v("allocateMemory putXX freeMemory pageSize")])])]),t._v(" "),s("li",[t._v("直接生成类实例\n"),s("ul",[s("li",[t._v("allocateInstance")])])]),t._v(" "),s("li",[t._v("直接操作类或者实例变量\n"),s("ul",[s("li",[t._v("objectFieldOffset getInt getObject")])])]),t._v(" "),s("li",[t._v("CAS相关操作\n"),s("ul",[s("li",[t._v("compareAndSwapObject Int Long")])])]),t._v(" "),s("li",[t._v("c -> malloc free")]),t._v(" "),s("li",[t._v("c++ -> new delete")])]),t._v(" "),s("blockquote",[s("p",[t._v("可见性：CPU缓存一致性协议 MESI"),s("br"),t._v("\n禁止指令重排：JMM模型里有8个指令完成数据的读写，通过其中load和store指令相互组合成的4个内存屏障实现禁止指令重排序")])]),t._v(" "),s("h2",{attrs:{id:"wait-notify线程通信-面试高频"}},[t._v("wait notify线程通信(面试高频)")])])}),[],!1,null,null,null);a.default=e.exports}}]);